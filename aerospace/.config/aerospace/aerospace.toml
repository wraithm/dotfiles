# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 25

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 0
    inner.vertical =   0
    outer.left =       0
    outer.bottom =     0
    outer.top =        0
    outer.right =      0

[workspace-to-monitor-force-assignment]
    1 = 'main'
    2 = 'main'
    3 = 'main'
    4 = 'main'
    5 = 'main'
    6 = 'main'
    7 = 'main'
    8 = 'main'
    9 = 'main'
    10 = ['secondary', 'main']
    'S' = 'main'

[[on-window-detected]]
if.app-id="com.mitchellh.ghostty"
run= ["layout tiling"]

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
    #                   sectionSign (ISO keyboards only, european keyboards only)
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut
    # (like in i3)

    alt-enter = '''exec-and-forget osascript -e '
    tell application "iTerm"
        create window with default profile
    end tell'
    '''
    ctrl-alt-t = '''exec-and-forget osascript -e '
    tell application "iTerm"
        create window with default profile
    end tell'
    '''
    # alt-enter = '''exec-and-forget osascript -e '
    # tell application "Ghostty"
    #     activate
    #     tell application "System Events" to keystroke "n" using {command down}
    # end tell' || open -a Ghostty
    # '''
    # ctrl-alt-t = '''exec-and-forget osascript -e '
    # tell application "Ghostty"
    #     activate
    #     tell application "System Events" to keystroke "n" using {command down}
    # end tell' || open -a Ghostty
    # '''

    ctrl-alt-b = '''exec-and-forget osascript -e '
    tell application "Safari"
        make new document at end of documents
        activate
    end tell'
    '''

    ctrl-alt-e = '''exec-and-forget if /opt/homebrew/bin/emacsclient -s ~/.config/emacs/server/server -c -n >/dev/null 2>&1; then
        osascript -e 'tell application "Emacs" to activate'
    else
        open -a Emacs
    fi
    '''

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    # alt-slash = 'layout tiles horizontal vertical'
    # alt-comma = 'layout accordion horizontal vertical'
    alt-t = 'layout tiles accordion'
    alt-ctrl-f = 'layout floating tiling'
    # alt-backspace = 'split toggle' idk if this is a thing

    alt-shift-f = 'fullscreen'

    alt-comma = 'workspace prev --wrap-around'
    alt-period = 'workspace next --wrap-around'
    alt-ctrl-comma = 'move-node-to-workspace prev --wrap-around --focus-follows-window'
    alt-ctrl-period = 'move-node-to-workspace next --wrap-around --focus-follows-window'

    # TODO find binding for next free workspace
    # alt-backtick = 'exec-and-forget aerospace workspace $(aerospace list-workspaces --empty --monitor focused | head -n1)'
    # alt-ctrl-backtick = 'exec-and-forget aerospace move-node-to-workspace --focus-follows-window $(aerospace list-workspaces --empty --monitor focused | head -n1)'
    # alt-shift-backtick = 'exec-and-forget aerospace move-node-to-workspace $(aerospace list-workspaces --empty --monitor focused | head -n1)'
    alt-backslash = 'exec-and-forget aerospace workspace $(aerospace list-workspaces --empty --monitor focused | head -n1)'
    alt-ctrl-backslash = 'exec-and-forget aerospace move-node-to-workspace --focus-follows-window $(aerospace list-workspaces --empty --monitor focused | head -n1)'
    alt-shift-backslash = 'exec-and-forget aerospace move-node-to-workspace $(aerospace list-workspaces --empty --monitor focused | head -n1)'

    # cycle windows for an app
    alt-backtick = 'exec-and-forget ~/.config/aerospace/cycle-app-windows.sh next'
    alt-shift-backtick = 'exec-and-forget ~/.config/aerospace/cycle-app-windows.sh prev'

    # Cycle through all windows on workspace
    alt-tab = 'exec-and-forget ~/.config/aerospace/cycle-windows.sh next'
    alt-shift-tab = 'exec-and-forget ~/.config/aerospace/cycle-windows.sh prev'
    alt-rightSquareBracket = 'exec-and-forget ~/.config/aerospace/cycle-windows.sh next'
    alt-leftSquareBracket = 'exec-and-forget ~/.config/aerospace/cycle-windows.sh prev'

    # Keep the app cycling on different keys if you want
    alt-ctrl-tab = 'exec-and-forget ~/.config/aerospace/cycle-apps.sh next'
    alt-ctrl-shift-tab = 'exec-and-forget ~/.config/aerospace/cycle-apps.sh prev'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    # TODO alt-tab, cycle through windows on workspace
    # TODO alt-`, cycle through windows of app on workspace
    # TODO alt-[ and alt-] cycle through windows on workspace
    # alt-tab = 'workspace-back-and-forth'
    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    # alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'
    # alt-tab = 'focus --boundaries-action wrap-around-the-workspace right'

    # alt-b = 'join-with down'
    # alt-g = 'join-with right'
    alt-left = 'join-with left'
    alt-down = 'join-with down'
    alt-up = 'join-with up'
    alt-right = 'join-with right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    alt-h = 'focus --boundaries-action wrap-around-the-workspace left'
    alt-j = 'focus --boundaries-action wrap-around-the-workspace down'
    alt-k = 'focus --boundaries-action wrap-around-the-workspace up'
    alt-l = 'focus --boundaries-action wrap-around-the-workspace right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    alt-ctrl-h = 'move left'
    alt-ctrl-j = 'move down'
    alt-ctrl-k = 'move up'
    alt-ctrl-l = 'move right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    alt-shift-minus = 'resize smart -50'
    alt-shift-equal = 'resize smart +50'
    alt-equal = 'balance-sizes'

    alt-minus = 'exec-and-forget ~/.config/aerospace/scratchpad.sh com.tinyspeck.slackmacgap Slack'

    cmd-h = [] # disable hide application
    cmd-alt-h = [] # disable hide application

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    ctrl-1 = 'workspace 1'
    ctrl-2 = 'workspace 2'
    ctrl-3 = 'workspace 3'
    ctrl-4 = 'workspace 4'
    ctrl-5 = 'workspace 5'
    ctrl-6 = 'workspace 6'
    ctrl-7 = 'workspace 7'
    ctrl-8 = 'workspace 8'
    ctrl-9 = 'workspace 9'
    ctrl-0 = 'workspace 10'
    alt-1 = 'workspace 1'
    alt-2 = 'workspace 2'
    alt-3 = 'workspace 3'
    alt-4 = 'workspace 4'
    alt-5 = 'workspace 5'
    alt-6 = 'workspace 6'
    alt-7 = 'workspace 7'
    alt-8 = 'workspace 8'
    alt-9 = 'workspace 9'
    alt-0 = 'workspace 10'
    alt-s = 'workspace S'
    # alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
    # alt-b = 'workspace B'
    # alt-c = 'workspace C'
    # alt-d = 'workspace D'
    # alt-e = 'workspace E'
    # alt-f = 'workspace F'
    # alt-g = 'workspace G'
    # alt-i = 'workspace I'
    # alt-m = 'workspace M'
    # alt-n = 'workspace N'
    # alt-o = 'workspace O'
    # alt-p = 'workspace P'
    # alt-q = 'workspace Q'
    # alt-r = 'workspace R'
    # alt-t = 'workspace T'
    # alt-u = 'workspace U'
    # alt-v = 'workspace V'
    # alt-w = 'workspace W'
    # alt-x = 'workspace X'
    # alt-y = 'workspace Y'
    # alt-z = 'workspace Z'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    alt-shift-1 = 'move-node-to-workspace 1'
    alt-shift-2 = 'move-node-to-workspace 2'
    alt-shift-3 = 'move-node-to-workspace 3'
    alt-shift-4 = 'move-node-to-workspace 4'
    alt-shift-5 = 'move-node-to-workspace 5'
    alt-shift-6 = 'move-node-to-workspace 6'
    alt-shift-7 = 'move-node-to-workspace 7'
    alt-shift-8 = 'move-node-to-workspace 8'
    alt-shift-9 = 'move-node-to-workspace 9'
    alt-shift-0 = 'move-node-to-workspace 10'
    alt-shift-s = 'move-node-to-workspace S'
    # alt-shift-a = 'move-node-to-workspace A'
    # alt-shift-b = 'move-node-to-workspace B'
    # alt-shift-c = 'move-node-to-workspace C'
    # alt-shift-d = 'move-node-to-workspace D'
    # alt-shift-e = 'move-node-to-workspace E'
    # alt-shift-f = 'move-node-to-workspace F'
    # alt-shift-g = 'move-node-to-workspace G'
    # alt-shift-i = 'move-node-to-workspace I'
    # alt-shift-m = 'move-node-to-workspace M'
    # alt-shift-n = 'move-node-to-workspace N'
    # alt-shift-o = 'move-node-to-workspace O'
    # alt-shift-p = 'move-node-to-workspace P'
    # alt-shift-q = 'move-node-to-workspace Q'
    # alt-shift-r = 'move-node-to-workspace R'
    # alt-shift-t = 'move-node-to-workspace T'
    # alt-shift-u = 'move-node-to-workspace U'
    # alt-shift-v = 'move-node-to-workspace V'
    # alt-shift-w = 'move-node-to-workspace W'
    # alt-shift-x = 'move-node-to-workspace X'
    # alt-shift-y = 'move-node-to-workspace Y'
    # alt-shift-z = 'move-node-to-workspace Z'

    alt-ctrl-1 = ['move-node-to-workspace 1', 'workspace 1']
    alt-ctrl-2 = ['move-node-to-workspace 2', 'workspace 2']
    alt-ctrl-3 = ['move-node-to-workspace 3', 'workspace 3']
    alt-ctrl-4 = ['move-node-to-workspace 4', 'workspace 4']
    alt-ctrl-5 = ['move-node-to-workspace 5', 'workspace 5']
    alt-ctrl-6 = ['move-node-to-workspace 6', 'workspace 6']
    alt-ctrl-7 = ['move-node-to-workspace 7', 'workspace 7']
    alt-ctrl-8 = ['move-node-to-workspace 8', 'workspace 8']
    alt-ctrl-9 = ['move-node-to-workspace 9', 'workspace 9']
    alt-ctrl-0 = ['move-node-to-workspace 10', 'workspace 10']
    alt-ctrl-s = ['move-node-to-workspace S', 'workspace S']
    # alt-ctrl-m = ['move-node-to-workspace M', 'workspace M']
    # alt-ctrl-a = ['move-node-to-workspace A', 'workspace A']
    # alt-ctrl-b = ['move-node-to-workspace B', 'workspace B']
    # alt-ctrl-c = ['move-node-to-workspace C', 'workspace C']
    # alt-ctrl-d = ['move-node-to-workspace D', 'workspace D']
    # alt-ctrl-e = ['move-node-to-workspace E', 'workspace E']
    # alt-ctrl-f = ['move-node-to-workspace F', 'workspace F']
    # alt-ctrl-g = ['move-node-to-workspace G', 'workspace G']
    # alt-ctrl-i = ['move-node-to-workspace I', 'workspace I']
    # alt-ctrl-n = ['move-node-to-workspace N', 'workspace N']
    # alt-ctrl-o = ['move-node-to-workspace O', 'workspace O']
    # alt-ctrl-p = ['move-node-to-workspace P', 'workspace P']
    # alt-ctrl-q = ['move-node-to-workspace Q', 'workspace Q']
    # alt-ctrl-r = ['move-node-to-workspace R', 'workspace R']
    # alt-ctrl-t = ['move-node-to-workspace T', 'workspace T']
    # alt-ctrl-u = ['move-node-to-workspace U', 'workspace U']
    # alt-ctrl-v = ['move-node-to-workspace V', 'workspace V']
    # alt-ctrl-w = ['move-node-to-workspace W', 'workspace W']
    # alt-ctrl-x = ['move-node-to-workspace X', 'workspace X']
    # alt-ctrl-y = ['move-node-to-workspace Y', 'workspace Y']
    # alt-ctrl-z = ['move-node-to-workspace Z', 'workspace Z']

    alt-d = 'focus-monitor --wrap-around next'
    alt-ctrl-d = 'move-node-to-monitor --wrap-around --focus-follows-window next'
    alt-shift-d = 'move-node-to-monitor --wrap-around next'

    # alt-esc = 'exec-and-forget shortcuts run "Swipe away notifications"'

    # music
    alt-shift-p = 'exec-and-forget nowplaying-cli togglePlayPause'
    alt-shift-period = 'exec-and-forget nowplaying-cli next'
    alt-shift-comma  = 'exec-and-forget nowplaying-cli previous'
    alt-shift-right = 'exec-and-forget nowplaying-cli next'
    alt-shift-left  = 'exec-and-forget nowplaying-cli previous'

    alt-w = 'close'
    alt-shift-r = 'mode resize'
    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    alt-shift-semicolon = 'mode service'
    alt-shift-c = 'reload-config'

    alt-shift-m = 'mode music'

[[on-window-detected]]
    if.app-id = 'com.tinyspeck.slackmacgap'
    run = ['layout floating', 'move-node-to-workspace S']

# Add a resize mode
[mode.resize.binding]
    h = 'resize width -50'
    j = 'resize height +50'
    k = 'resize height -50'
    l = 'resize width +50'

    # Fine-grained control
    shift-h = 'resize width -10'
    shift-j = 'resize height +10'
    shift-k = 'resize height -10'
    shift-l = 'resize width +10'

    # Balance sizes
    equal = 'balance-sizes'

    # Exit resize mode
    esc = 'mode main'
    enter = 'mode main'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    alt-shift-semicolon = 'mode main'
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    # backspace = ['close-all-windows-but-current', 'mode main']

    # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

    alt-shift-h = ['join-with left', 'mode main']
    alt-shift-j = ['join-with down', 'mode main']
    alt-shift-k = ['join-with up', 'mode main']
    alt-shift-l = ['join-with right', 'mode main']

[mode.music.binding]
    # Volume controls
    equal = 'volume up'
    minus = 'volume down'
    m = ['volume mute-toggle', 'mode main']  # Mute and exit
    shift-m = 'volume mute-toggle'  # Just mute

    # Play/pause/next/prev with single keys
    p = 'exec-and-forget nowplaying-cli togglePlayPause'
    shift-p = 'exec-and-forget nowplaying-cli togglePlayPause'
    period = 'exec-and-forget nowplaying-cli next'
    shift-period = 'exec-and-forget nowplaying-cli next'
    comma = 'exec-and-forget nowplaying-cli previous'
    shift-comma = 'exec-and-forget nowplaying-cli previous'

    # hjkl controls (matching your i3 config)
    h = 'exec-and-forget nowplaying-cli previous'
    l = 'exec-and-forget nowplaying-cli next'
    k = 'exec-and-forget nowplaying-cli togglePlayPause'
    j = 'exec-and-forget nowplaying-cli togglePlayPause'

    left = 'exec-and-forget nowplaying-cli previous'
    right = 'exec-and-forget nowplaying-cli next'
    up = 'volume up'
    down = 'volume down'

    # Additional useful controls
    space = 'exec-and-forget nowplaying-cli togglePlayPause'
    n = 'exec-and-forget nowplaying-cli next'
    shift-n = 'exec-and-forget nowplaying-cli previous'

    # Volume percentage jumps
    1 = 'volume set 10'
    2 = 'volume set 20'
    3 = 'volume set 30'
    4 = 'volume set 40'
    5 = 'volume set 50'
    6 = 'volume set 60'
    7 = 'volume set 70'
    8 = 'volume set 80'
    9 = 'volume set 90'
    0 = 'volume set 0'

    # Exit music mode
    enter = 'mode main'
    esc = 'mode main'
    alt-shift-m = 'mode main'  # Toggle back
    q = 'mode main'
